#!/usr/bin/env python
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà import ‡∏ú‡∏¥‡∏î ‡πÅ‡∏•‡∏∞ import ‡πÉ‡∏´‡∏°‡πà
‡∏£‡∏±‡∏ô: python fix_import.py
"""

import os
import django
import pandas as pd

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'webproject.settings')
django.setup()

from resources.models import Book, ResourceType, Subject

def fix_import():
    """‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞ import ‡πÉ‡∏´‡∏°‡πà"""
    
    # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    print("üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÄ‡∏Å‡πà‡∏≤...")
    deleted_count = Book.objects.all().delete()[0]
    print(f"‚úÖ ‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß {deleted_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    
    # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    excel_file = 'capture/namebook.xlsx'
    if not os.path.exists(excel_file):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {excel_file}")
        return
    
    print(f"üìñ ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå {excel_file} ‡πÉ‡∏´‡∏°‡πà...")
    df = pd.read_excel(excel_file)
    
    print(f"üìä Columns: {list(df.columns)}")
    print("\nüìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å:")
    for i in range(min(5, len(df))):
        print(f"--- ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {i+1} ---")
        for col in df.columns:
            value = df.iloc[i][col]
            if pd.notna(value):
                print(f"  {col}: {str(value)[:80]}")
        print()
    
    # ‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ Excel ‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤ Column B ‡∏Ñ‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏£‡∏¥‡∏á
    print("‚úÖ ‡πÉ‡∏ä‡πâ Column ‡∏ó‡∏µ‡πà 2 (index 1) ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
    
    if len(df.columns) >= 2:
        title_col = df.columns[1]  # Column B (index 1)
    else:
        title_col = df.columns[0]  # fallback
    
    print(f"üìù Column ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: '{title_col}'")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å column ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    print(f"\nüìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å '{title_col}':")
    sample_titles = df[title_col].dropna().head(10)
    for i, title in enumerate(sample_titles, 1):
        print(f"   {i:2d}. {str(title)[:80]}")
    
    print(f"\n‚úÖ ‡∏à‡∏∞ import ‡∏î‡πâ‡∏ß‡∏¢ column '{title_col}'...")
    
    return title_col, df


def import_with_correct_column(title_col, df):
    """Import ‡∏î‡πâ‡∏ß‡∏¢ column ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"""
    
    # ‡∏î‡∏∂‡∏á ResourceType ‡πÅ‡∏•‡∏∞ Subject ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    default_type = ResourceType.objects.filter(name='‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠').first()
    default_subject = Subject.objects.filter(name='‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ').first()
    
    print(f"üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏° import ‡∏î‡πâ‡∏ß‡∏¢ column '{title_col}'...")
    created_count = 0
    error_count = 0
    
    for index, row in df.iterrows():
        try:
            title = str(row[title_col]).strip() if pd.notna(row[title_col]) else None
            
            if not title or len(title) < 3:  # ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≤‡∏ß‡∏Å‡∏ß‡πà‡∏≤ 3 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                error_count += 1
                continue
            
            # ‡∏´‡∏≤ author ‡∏à‡∏≤‡∏Å column ‡∏≠‡∏∑‡πà‡∏ô
            author = None
            author_candidates = ['Author', '‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á', 'author', '‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô']
            for col in author_candidates:
                if col in df.columns and pd.notna(row[col]):
                    author = str(row[col]).strip()
                    break
            
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if Book.objects.filter(title=title).exists():
                continue
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà
            book = Book.objects.create(
                title=title,
                author=author,
                resource_type=default_type,
                subject=default_subject,
                language='‡πÑ‡∏ó‡∏¢',
                order_number=index + 1,
                is_active=True,
                is_available=True
            )
            
            created_count += 1
            if created_count <= 10:  # ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏£‡∏Å
                print(f"‚úÖ {created_count:3d}: {title[:60]}")
            elif created_count % 20 == 0:  # ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏∏‡∏Å 20 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                print(f"‚úÖ {created_count:3d}: {title[:60]}")
                
        except Exception as e:
            error_count += 1
            print(f"‚ùå Error row {index+1}: {str(e)}")
    
    print(f"\nüéâ Import ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")
    print(f"   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà: {created_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"   ‚ùå Error: {error_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    print(f"   üìö ‡∏£‡∏ß‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: {Book.objects.count()} ‡πÄ‡∏•‡πà‡∏°")


if __name__ == '__main__':
    print("üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Import...")
    print("="*50)
    
    title_col, df = fix_import()
    
    # Import ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠ input)
    import_with_correct_column(title_col, df)