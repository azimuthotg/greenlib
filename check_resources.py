#!/usr/bin/env python
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Resources
‡∏£‡∏±‡∏ô: python check_resources.py
"""

import os
import django

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'webproject.settings')
django.setup()

from resources.models import Book, ResourceType, Subject

def check_data():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"""
    
    print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Resources...")
    print("="*50)
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ResourceType
    print(f"üìÅ ResourceType: {ResourceType.objects.count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    for rt in ResourceType.objects.all():
        print(f"   - {rt.name} (Active: {rt.is_active})")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Subject
    print(f"\nüìö Subject: {Subject.objects.count()} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
    for subj in Subject.objects.all():
        print(f"   - {subj.name} (Active: {subj.is_active})")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Book
    total_books = Book.objects.count()
    active_books = Book.objects.filter(is_active=True).count()
    available_books = Book.objects.filter(is_active=True, is_available=True).count()
    
    print(f"\nüìñ Books:")
    print(f"   - ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_books} ‡πÄ‡∏•‡πà‡∏°")
    print(f"   - Active: {active_books} ‡πÄ‡∏•‡πà‡∏°")
    print(f"   - Available: {available_books} ‡πÄ‡∏•‡πà‡∏°")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á 5 ‡πÄ‡∏•‡πà‡∏°‡πÅ‡∏£‡∏Å
    print(f"\nüìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ 5 ‡πÄ‡∏•‡πà‡∏°‡πÅ‡∏£‡∏Å:")
    books = Book.objects.filter(is_active=True, is_available=True).select_related('resource_type', 'subject')[:5]
    
    for i, book in enumerate(books, 1):
        print(f"   {i}. {book.title[:60]}")
        print(f"      Author: {book.author or 'N/A'}")
        print(f"      Type: {book.resource_type.name if book.resource_type else 'N/A'}")
        print(f"      Subject: {book.subject.name if book.subject else 'N/A'}")
        print(f"      Active: {book.is_active}, Available: {book.is_available}")
        print()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Query ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô View
    print("üîé ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Query ‡∏à‡∏≤‡∏Å View:")
    view_books = Book.objects.filter(is_active=True, is_available=True).select_related('resource_type', 'subject')
    print(f"   Query ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: {view_books.count()} ‡πÄ‡∏•‡πà‡∏°")
    
    if view_books.count() == 0:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç is_active=True, is_available=True")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Field values
        all_books = Book.objects.all()
        print(f"\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ Boolean fields ‡πÉ‡∏ô {all_books.count()} ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠:")
        
        active_true = all_books.filter(is_active=True).count()
        available_true = all_books.filter(is_available=True).count()
        
        print(f"   is_active=True: {active_true}")
        print(f"   is_available=True: {available_true}")
        print(f"   ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô True: {all_books.filter(is_active=True, is_available=True).count()}")
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á field values
        print(f"\nüìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ Boolean fields (5 ‡πÄ‡∏•‡πà‡∏°‡πÅ‡∏£‡∏Å):")
        for book in all_books[:5]:
            print(f"   - {book.title[:40]}: active={book.is_active}, available={book.is_available}")


if __name__ == '__main__':
    check_data()