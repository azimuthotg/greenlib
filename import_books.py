#!/usr/bin/env python
"""
‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå import ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ 199 ‡πÄ‡∏•‡πà‡∏°‡∏à‡∏≤‡∏Å Excel
‡∏£‡∏±‡∏ô: python import_books.py
"""

import os
import django
import pandas as pd
from datetime import datetime

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'webproject.settings')
django.setup()

from resources.models import Book, ResourceType, Subject

def import_books_from_excel():
    """Import ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel"""
    
    excel_file = 'capture/namebook.xlsx'
    
    if not os.path.exists(excel_file):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {excel_file}")
        print("üìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå capture/")
        return
    
    try:
        # ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå Excel
        print(f"üìñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå {excel_file}...")
        df = pd.read_excel(excel_file)
        
        print(f"üìä ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• {len(df)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        print("üìã Columns:", list(df.columns))
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å
        print("\nüìã ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å:")
        for i in range(min(3, len(df))):
            print(f"--- ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {i+1} ---")
            for col in df.columns:
                value = df.iloc[i][col]
                if pd.notna(value):
                    print(f"  {col}: {str(value)[:100]}")
        
        # ‡∏î‡∏∂‡∏á ResourceType ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠)
        default_type = ResourceType.objects.filter(name='‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠').first()
        if not default_type:
            default_type = ResourceType.objects.first()
        
        # ‡∏î‡∏∂‡∏á Subject ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)
        default_subject = Subject.objects.filter(name='‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ').first()
        if not default_subject:
            default_subject = Subject.objects.first()
        
        print(f"‚úÖ ‡πÉ‡∏ä‡πâ ResourceType ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: {default_type}")
        print(f"‚úÖ ‡πÉ‡∏ä‡πâ Subject ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: {default_subject}")
        
        # ‡πÄ‡∏£‡∏¥‡πà‡∏° import
        print("\nüöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô import...")
        created_count = 0
        error_count = 0
        
        for index, row in df.iterrows():
            try:
                # ‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ (‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠)
                title_candidates = ['Title', '‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á', 'title', '‡∏ä‡∏∑‡πà‡∏≠', '‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠', 'Book']
                title = None
                
                for col in title_candidates:
                    if col in df.columns and pd.notna(row[col]) and str(row[col]).strip():
                        title = str(row[col]).strip()
                        break
                
                # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏ä‡∏∑‡πà‡∏≠ ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÅ‡∏£‡∏Å
                if not title:
                    first_col = df.columns[0]
                    if pd.notna(row[first_col]):
                        title = str(row[first_col]).strip()
                
                if not title:
                    print(f"‚ö†Ô∏è  ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {index+1}: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠")
                    error_count += 1
                    continue
                
                # ‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á
                author_candidates = ['Author', '‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á', 'author', '‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô']
                author = None
                for col in author_candidates:
                    if col in df.columns and pd.notna(row[col]):
                        author = str(row[col]).strip()
                        break
                
                # ‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏π‡πà
                call_number_candidates = ['Call Number', '‡πÄ‡∏•‡∏Ç‡∏´‡∏°‡∏π‡πà', 'call_number', 'CallNumber']
                call_number = None
                for col in call_number_candidates:
                    if col in df.columns and pd.notna(row[col]):
                        call_number = str(row[col]).strip()
                        break
                
                # ‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå
                publisher_candidates = ['Publisher', '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå', 'publisher', '‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå']
                publisher = None
                for col in publisher_candidates:
                    if col in df.columns and pd.notna(row[col]):
                        publisher = str(row[col]).strip()
                        break
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                existing_book = Book.objects.filter(title=title).first()
                if existing_book:
                    print(f"‚ÑπÔ∏è  ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {index+1}: ‡∏°‡∏µ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß - {title[:50]}")
                    continue
                
                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà
                book = Book.objects.create(
                    title=title,
                    author=author,
                    publisher=publisher,
                    call_number=call_number,
                    resource_type=default_type,
                    subject=default_subject,
                    language='‡πÑ‡∏ó‡∏¢',
                    order_number=index + 1,  # ‡πÉ‡∏ä‡πâ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏à‡∏≤‡∏Å Excel
                    is_active=True,
                    is_available=True,
                    is_featured=False
                )
                
                created_count += 1
                print(f"‚úÖ {created_count:3d}: {title[:60]}")
                
            except Exception as e:
                error_count += 1
                print(f"‚ùå ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà {index+1}: Error - {str(e)}")
        
        # ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
        print("\n" + "="*60)
        print("üéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£ import!")
        print(f"üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:")
        print(f"   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà: {created_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        print(f"   ‚ùå Error: {error_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£")
        print(f"   üìö ‡∏£‡∏ß‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: {Book.objects.count()} ‡πÄ‡∏•‡πà‡∏°")
        
    except FileNotFoundError:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {excel_file}")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")


if __name__ == '__main__':
    print("üìö ‡πÄ‡∏£‡∏¥‡πà‡∏° import ‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å Excel...")
    print("="*60)
    import_books_from_excel()